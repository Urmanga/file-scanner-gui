name: 🚀 Build File Scanner GUI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            artifact_name: file-scanner-gui-windows
            asset_name: file-scanner-gui-windows.exe
            build_command: pyinstaller --onefile --windowed --name "File Scanner GUI" file_scanner_gui.py
            
          - os: ubuntu-latest
            artifact_name: file-scanner-gui-linux
            asset_name: file-scanner-gui-linux
            build_command: pyinstaller --onefile --windowed --name "file-scanner-gui" file_scanner_gui.py
            
          - os: macos-latest
            artifact_name: file-scanner-gui-macos
            asset_name: file-scanner-gui-macos.app
            build_command: pyinstaller --onefile --windowed --name "File Scanner GUI" file_scanner_gui.py

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: 🔨 Build executable
      run: ${{ matrix.build_command }}

    - name: 📂 Prepare artifacts (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir release
        copy "dist\File Scanner GUI.exe" "release\${{ matrix.asset_name }}"
      shell: cmd

    - name: 📂 Prepare artifacts (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir release
        cp "dist/file-scanner-gui" "release/${{ matrix.asset_name }}"
        chmod +x "release/${{ matrix.asset_name }}"

    - name: 📂 Prepare artifacts (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        mkdir release
        cp -R "dist/File Scanner GUI.app" "release/"
        cd release && zip -r "${{ matrix.asset_name }}.zip" "File Scanner GUI.app"

    - name: 🗜️ Create ZIP archive (Windows & Linux)
      if: matrix.os != 'macos-latest'
      run: |
        cd release
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          powershell Compress-Archive -Path "${{ matrix.asset_name }}" -DestinationPath "${{ matrix.artifact_name }}.zip"
        else
          zip "${{ matrix.artifact_name }}.zip" "${{ matrix.asset_name }}"
        fi
      shell: bash

    - name: 📤 Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: release/
        retention-days: 30

    - name: 📋 Display build info
      run: |
        echo "✅ Build completed for ${{ matrix.os }}"
        echo "📦 Artifact: ${{ matrix.artifact_name }}"
        echo "🗂️ Asset: ${{ matrix.asset_name }}"
        ls -la release/ || dir release\

  # Создание релиза с автоматической загрузкой файлов
  release:
    name: 🎉 Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: 📥 Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: 📋 Display downloaded artifacts
      run: find artifacts -type f -name "*.zip" -o -name "*.app"

    - name: 🚀 Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Уведомление о успешной сборке
  notify:
    name: 📢 Notify Success
    needs: build
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: 🎊 Success notification
      run: |
        echo "🎉 All builds completed successfully!"
        echo "✅ Windows executable ready"
        echo "✅ Linux executable ready" 
        echo "✅ macOS app bundle ready"
        echo ""
        echo "📦 Artifacts are available in the Actions tab"
        echo "🔗 Download them from: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
